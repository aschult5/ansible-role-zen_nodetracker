---
- name: Check required input variables
  assert:
    that: "{{item}} is defined"
    msg: Required input variable '{{item}}' undefined.
  with_items:
    - snode_alert_email
    - snode_stake_taddr

- name: tracker source directory
  file:
    dest: "{{ snode_tracker_dir }}"
    state: directory
    owner: "{{ zend_user_name }}"

- name: NodeTracker Config
  become: yes
  become_user: "{{ zend_user_name }}"
  block:
    - name: Nodetracker config parent directory
      file:
        path: "{{ snode_tracker_dir }}/config"
        state: directory
        owner: "{{ zend_user_name }}"
        mode: 0777

    - set_fact:
        tracker_config_path: "{{ snode_tracker_dir }}/config/config.json"

    - name: Check if tracker config exists
      stat:
        path: "{{ tracker_config_path }}"
      register: stat_result

    - name: Extract Existing NodeTracker Config
      when: stat_result.stat.exists
      block:
        - name: Read existing tracker config
          slurp:
            src: "{{ tracker_config_path }}"
          register: existing_tracker_config

        - name: Convert tracker config content to dict
          set_fact:
            snode_tracker_config: "{{ existing_tracker_config['content'] | b64decode | from_json }}"

    - name: NodeTracker Config Template
      template:
        src: config.j2
        dest: "{{ tracker_config_path }}"
        owner: "{{ zend_user_name }}"
        mode: 0664
